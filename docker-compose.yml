version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: homevision-postgres
    environment:
      POSTGRES_DB: homevision
      POSTGRES_USER: homevision
      POSTGRES_PASSWORD: homevision123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - homevision-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: homevision-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - homevision-network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: homevision-backend
    environment:
      - DATABASE_URL=postgresql://homevision:homevision123@postgres:5432/homevision
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-change-in-production
      - FIREBASE_CREDENTIALS_FILE=/app/firebase-credentials.json
    volumes:
      - ./backend:/app
      - ./static:/app/static
      - ./firebase-credentials.json:/app/firebase-credentials.json:ro
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - homevision-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: homevision-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api/v1
      - REACT_APP_FIREBASE_API_KEY=${REACT_APP_FIREBASE_API_KEY}
      - REACT_APP_FIREBASE_AUTH_DOMAIN=${REACT_APP_FIREBASE_AUTH_DOMAIN}
      - REACT_APP_FIREBASE_PROJECT_ID=${REACT_APP_FIREBASE_PROJECT_ID}
      - REACT_APP_FIREBASE_STORAGE_BUCKET=${REACT_APP_FIREBASE_STORAGE_BUCKET}
      - REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${REACT_APP_FIREBASE_MESSAGING_SENDER_ID}
      - REACT_APP_FIREBASE_APP_ID=${REACT_APP_FIREBASE_APP_ID}
      - REACT_APP_FIREBASE_VAPID_KEY=${REACT_APP_FIREBASE_VAPID_KEY}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - homevision-network
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: homevision-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - homevision-network

volumes:
  postgres_data:
  redis_data:

networks:
  homevision-network:
    driver: bridge 